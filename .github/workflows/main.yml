name: CI

env:
  PROJECT_ID: aifudy-dev
  SERVICE: hello
  REGION: southamerica-east1
  REPOSITORY: images
  GRAALVM_HOME: .graalvm

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup GraalVM
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: '21.2.0'
          java: 'java11'
          arch: 'amd64'

      - name: Install native-image component
        run: ${GRAALVM_HOME}/bin/gu install native-image

      - name: Fix gradle execute permission
        run: chmod a+x ./gradlew

      - name: Build native
        run: ./gradlew build -Dquarkus.package.type=native -x test -x testNative

      - name: Run tests
        run: ./gradlew testNative

      - name: Setup docker build
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker southamerica-east1-docker.pkg.dev

      - name: Build and Push Container
        run: |-
          docker build -f src/main/docker/Dockerfile.native -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@main
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          region: ${{ env.REGION }}

      - name: Clean-up revisions
        run: gcloud run revisions delete --quiet `gcloud run revisions list --region=${{ env.REGION }} --service=hello --format="value(name,creationTimestamp)" --sort-by=~creationTimestamp | sed 1,2d  | awk '{print $1}' | tr "\n" " "`
        continue-on-error: true